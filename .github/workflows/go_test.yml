name: Go

on:
  push:
    branches: [ test ]
#  pull_request:
#   branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Install dependenses glog
      run: go get github.com/golang/glog
      
    - name: Install pg driver
      run: go get github.com/lib/pq

    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.1.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
      
    - name: Build app
      run: CGO_ENABLED=0 go build -o ./src/urlToJson ./src/urlToJson.go
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ruslangr/urltojson-test:latest
        
    - name: AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          
    - name: Deploy image to K8S cluster                                                                            
      uses: kodermax/kubectl-aws-eks@master                                                                         
      env:                                                                                                          
        RELEASE_IMAGE: ruslangr/urltojson-test:latest
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout restart deployment/urltojson-app -n test

    - name: Update deployment at K8S cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        RELEASE_IMAGE: ruslangr/urltojson-test:latest
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: apply -f kubeconf/deploy.yml -n test
